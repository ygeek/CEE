# -*- coding: utf-8 -*-
# Generated by Django 1.9.5 on 2016-07-02 05:23
from __future__ import unicode_literals

import api.models.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Anchor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, unique=True)),
                ('dx', models.IntegerField()),
                ('dy', models.IntegerField()),
                ('type', models.CharField(choices=[('task', '\u9009\u62e9\u9898'), ('story', '\u6545\u4e8b')], default='task', max_length=10)),
                ('ref_id', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Choice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.SmallIntegerField()),
                ('name', models.CharField(max_length=30, unique=True)),
                ('desc', models.TextField()),
                ('image_key', models.CharField(max_length=100)),
                ('answer', models.SmallIntegerField()),
                ('answer_message', models.TextField()),
                ('answer_next', models.TextField()),
                ('answer_image_key', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('key', models.CharField(max_length=16, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=64)),
                ('initials', models.CharField(max_length=16)),
                ('pingyin', models.CharField(max_length=64)),
                ('short_name', models.CharField(max_length=64)),
            ],
        ),
        migrations.CreateModel(
            name='Coupon',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, unique=True)),
                ('location', models.CharField(max_length=50)),
                ('image_key', models.CharField(max_length=100)),
                ('desc', api.models.fields.JsonField()),
                ('gmt_start', models.DateField()),
                ('gmt_end', models.DateField()),
                ('code', models.CharField(max_length=10)),
                ('is_deleted', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('activate_at', models.SmallIntegerField()),
                ('content', api.models.fields.JsonField()),
            ],
        ),
        migrations.CreateModel(
            name='Level',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('content', api.models.fields.JsonField()),
            ],
        ),
        migrations.CreateModel(
            name='LevelCoupon',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.IntegerField()),
                ('remain', models.IntegerField(default=0)),
                ('coupon', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='level_coupons', to='api.Coupon')),
                ('level', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='level_coupons', to='api.Level')),
            ],
        ),
        migrations.CreateModel(
            name='LoginAward',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('desc', models.TextField()),
                ('coin', models.IntegerField()),
                ('gmt_start', models.DateField()),
                ('gmt_end', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='Map',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, unique=True)),
                ('desc', models.TextField()),
                ('longitude', models.FloatField()),
                ('latitude', models.FloatField()),
                ('geohash', models.CharField(db_index=True, max_length=16)),
                ('image_key', models.CharField(max_length=100)),
                ('icon_key', models.CharField(max_length=100)),
                ('summary_image_key', models.CharField(max_length=100)),
                ('published', models.BooleanField(default=False)),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='maps', to='api.City')),
            ],
        ),
        migrations.CreateModel(
            name='Medal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, unique=True)),
                ('desc', models.TextField()),
                ('icon_key', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('story', 'Story'), ('attention', 'Attention'), ('coupon', 'Coupon')], max_length=10)),
                ('timestamp', models.IntegerField()),
                ('text', models.TextField()),
                ('unread', models.BooleanField(default=True)),
                ('story_id', models.IntegerField(blank=True, null=True)),
                ('map_id', models.IntegerField(blank=True, null=True)),
                ('coupon_id', models.IntegerField(blank=True, null=True)),
                ('is_local', models.BooleanField(default=False)),
                ('is_deleted', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_messages', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Option',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.SmallIntegerField()),
                ('desc', models.TextField()),
                ('choice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='options', to='api.Choice')),
            ],
        ),
        migrations.CreateModel(
            name='Story',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('desc', models.TextField()),
                ('time', models.IntegerField()),
                ('good', models.IntegerField(default=0)),
                ('difficulty', models.IntegerField()),
                ('distance', models.FloatField()),
                ('tags', api.models.fields.JsonField()),
                ('coin', models.IntegerField(default=0)),
                ('image_keys', api.models.fields.JsonField()),
                ('tour_image_key', models.CharField(max_length=100)),
                ('hud_image_key', models.CharField(max_length=100)),
                ('published', models.BooleanField(default=False)),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stories', to='api.City')),
            ],
        ),
        migrations.CreateModel(
            name='StoryItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='story_items', to='api.Item')),
                ('story', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='story_items', to='api.Story')),
            ],
        ),
        migrations.CreateModel(
            name='StoryLevel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.SmallIntegerField()),
                ('level', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='story_levels', to='api.Level')),
                ('story', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='story_levels', to='api.Story')),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, unique=True)),
                ('desc', models.TextField()),
                ('location', models.TextField()),
                ('detail_location', models.TextField(blank=True, null=True)),
                ('phone', models.TextField(blank=True, null=True)),
                ('coin', models.IntegerField()),
                ('award_image_key', models.CharField(max_length=100)),
                ('medal', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='task', to='api.Medal')),
            ],
        ),
        migrations.CreateModel(
            name='ThirdPartyAccount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.CharField(max_length=100)),
                ('platform', models.CharField(max_length=50)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserAnchor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('anchor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_anchors', to='api.Anchor')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_anchors', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserCoin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.IntegerField()),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='coin', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserCoupon',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('consumed', models.BooleanField()),
                ('coupon', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_coupons', to='api.Coupon')),
                ('level', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_coupons', to='api.Level')),
                ('story', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_coupons', to='api.Story')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_coupons', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserDeviceToken',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device_token', models.CharField(max_length=100)),
                ('installation_id', models.CharField(blank=True, max_length=100, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='device_token', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserFriend',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('friend', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='friends', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_friend', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserLoginAward',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gmt_created', models.DateTimeField(auto_now_add=True)),
                ('award', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_login_awards', to='api.LoginAward')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_login_awards', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserMap',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('completed', models.BooleanField()),
                ('map', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_maps', to='api.Map')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_maps', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserMedal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('medal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_medals', to='api.Medal')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_medals', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserMobile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mobile', models.CharField(blank=True, max_length=50, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='user_mobile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gmt_created', models.DateField(auto_now_add=True)),
                ('gmt_modified', models.DateField(auto_now=True)),
                ('nickname', models.CharField(max_length=50)),
                ('head_img_key', models.CharField(blank=True, max_length=100, null=True)),
                ('sex', models.CharField(blank=True, max_length=50, null=True)),
                ('birthday', models.DateField()),
                ('mobile', models.CharField(blank=True, max_length=50, null=True)),
                ('location', models.CharField(blank=True, max_length=50, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserStory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('completed', models.BooleanField()),
                ('progress', models.IntegerField()),
                ('like', models.BooleanField(default=False)),
                ('story', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_stories', to='api.Story')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_stories', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserTask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('completed', models.BooleanField()),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_tasks', to='api.Task')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_tasks', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='task',
            name='owners',
            field=models.ManyToManyField(related_name='tasks', through='api.UserTask', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='story',
            name='owners',
            field=models.ManyToManyField(related_name='stories', through='api.UserStory', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='medal',
            name='owners',
            field=models.ManyToManyField(related_name='medals', through='api.UserMedal', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='map',
            name='medal',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='map', to='api.Medal'),
        ),
        migrations.AddField(
            model_name='map',
            name='owners',
            field=models.ManyToManyField(related_name='maps', through='api.UserMap', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterIndexTogether(
            name='loginaward',
            index_together=set([('gmt_start', 'gmt_end')]),
        ),
        migrations.AddField(
            model_name='levelcoupon',
            name='story',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='level_coupons', to='api.Story'),
        ),
        migrations.AddField(
            model_name='level',
            name='stories',
            field=models.ManyToManyField(related_name='levels', through='api.StoryLevel', to='api.Story'),
        ),
        migrations.AddField(
            model_name='item',
            name='stories',
            field=models.ManyToManyField(related_name='items', through='api.StoryItem', to='api.Story'),
        ),
        migrations.AddField(
            model_name='coupon',
            name='owners',
            field=models.ManyToManyField(related_name='coupons', through='api.UserCoupon', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='choice',
            name='task',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='choices', to='api.Task'),
        ),
        migrations.AddField(
            model_name='anchor',
            name='map',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='anchors', to='api.Map'),
        ),
        migrations.AddField(
            model_name='anchor',
            name='owners',
            field=models.ManyToManyField(related_name='anchors', through='api.UserAnchor', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterUniqueTogether(
            name='usertask',
            unique_together=set([('user', 'task')]),
        ),
        migrations.AlterUniqueTogether(
            name='userstory',
            unique_together=set([('user', 'story')]),
        ),
        migrations.AlterUniqueTogether(
            name='usermedal',
            unique_together=set([('user', 'medal')]),
        ),
        migrations.AlterUniqueTogether(
            name='usermap',
            unique_together=set([('user', 'map')]),
        ),
        migrations.AlterUniqueTogether(
            name='userfriend',
            unique_together=set([('user', 'friend')]),
        ),
        migrations.AlterUniqueTogether(
            name='useranchor',
            unique_together=set([('user', 'anchor')]),
        ),
        migrations.AlterUniqueTogether(
            name='storylevel',
            unique_together=set([('story', 'order')]),
        ),
        migrations.AlterUniqueTogether(
            name='option',
            unique_together=set([('choice', 'order')]),
        ),
        migrations.AlterUniqueTogether(
            name='choice',
            unique_together=set([('task', 'order')]),
        ),
        migrations.AlterUniqueTogether(
            name='anchor',
            unique_together=set([('type', 'ref_id')]),
        ),
    ]
